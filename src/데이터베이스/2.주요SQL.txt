[ 데이터베이스 ] : 데이터/자료들의 집합/모임 (이하 *DB*)

[ 관계형 DB ] : 자료들 간의 종속되는 관계 표현 가능한 DB

[ 테이블 ] : 행과 열로 이루어진 데이터의 형식 = 표

[ SQL ]
    - 주의할점
        1) SQL 대소문자를 구분하지 않는다.
        2) SQL 명령어 문장 끝에 (;)으로 마무리한다.
    [0] 메타데이터 관리어
        1. show
            1) show databases;                  : DB서버내 전체 DB 목록 조회
            2) show variables like 'datadir'    : DB서버내 LOCAL PATH 조회
            3) show tables;                     : *활성화*중인 DB내 모든 테이블 조회
        2. use
            1) use DB명;                         : DB서버내 지정한 DB 활성화(사용)
    [1] DB 정의 : DDL
        1. create
            1) create database DB명;             : 지정한 DB 생성
            2) create table 테이블명(             : 지정한 테이블 생성
                  속성명1 타입 제약조건 ,
                  속성명2 타입 제약조건
               );
        2. drop
            1) drop database DB명;               : 지정한 DB 삭제
            2) drop database if exists DB명;     : 만약 지정한 DB 존재하면 삭제
            3) drop table 테이블명;               : 지정한 테이블 삭제
            4) drop table if exists 테이블명;     : 만약에 지정한 테이블 존재하면 삭제
            5)

[ 데이터타입 ] : 테이블내 속성들이 갖는/저장하는 자료들의 분류/타입/종류
    1. 정수
        1) tinyint      1바이트        -128 ~ 127
        2) smallint     2바이트        +-약 30000
        3) mediumint    3바이트        +-약 800만
        4) int          4바이트        +-약 21억
        5) bigint       8바이트        +-21억 이상
            * signed : 부호가 있다(+ 양수 - 음수)
            * unsigned : 부호가 없다(허용범위 *2)
            int unsigned : 42억까지(대신 음수 없다.)
    2. 실수
        1) float        4바이트        소수점
        2) double       8바이트        소수점
        3) decimal      문자타입        소수점을 문자로 처리하는 타입 , 오차없음
    3. 날짜/시간
        1) date         날짜표현        2025-07-15
        2) time         시간표현        10:02:30
        3) datatime     날짜/시간표현    2025-07-15 10:02:30
    4. 문자
        1) char(길이)    문자열표현      고정길이 최대255글자 , char(5) -> "유재석" -> [유] [재] [석] [ ] [ ]
        2) varchar(길이) 문자열표현      가변길이 최대255글자 , varchar(5) -> "유재석" -> [유] [재] [석] 남은길이삭제
        3) test         문자열표현      최대6만글자
        4) longtext     문자열표현      최대42억글자, 4GB, 대용량
    5. 논리
        1) bool         논리표현        true 혹은 false , tinyint와 같은 1바이트

[ 제약조건 ] : 테이블내 속성의 제약조건
    1. not null         : 해당 속성에 null 값을 저장하지 않는다.
    2. unique           : 해당 속성에 중복값을 허용하지 않는다. (중복방지)
    3. default 기본값    : 해당 속성에 값 생략시 기본값으로 초기화한다.
        default 0       : 해당 속성에 값이 생략되면 0 초기화
        default now()   : 해당 속성에 값이 생략되면 현재 날짜/시간 초기화한다.
    4. auto_increment   : (MySQL) 해당 속성에 순서대로 자동번호 초기화한다. ( + primary key랑 같이 써야함 )
    5. primary key      : 기본/식별키(PK) , 식별 가능한 고유 값 필드키
        -> 학번, 사번, 주민등록번호, 주문번호, 제품번호, 게시물번호, 예약번호...
        -> 절대적으로 중복이 없는 고유값 !!!!!
        특징) not null , unique 포함
        선언) constraint primary key( 필드명 )
    6. foreign key      : 참조/외래키(FK) , 다른 테이블의 기본키(PK)를 참조하는 키
        -> 수강신청학번, 출근직원사번, 작성자회원번호 등
        특징) FK필드는 NULL과 중복이 가능하다. PK값 참조.
        선언) constraint foreign key( FK필드명 ) references 참조할테이블명( PK필드명 );
        주의할점 : FK속성타입과 PK속성타입 일치한다.

[ 생성된 테이블 다이어그램 확인 ] : 여럿 테이블 간의 관계 확인
    # workbench 상단메뉴 -> [Database] -> [Reverse Engineer] -> stored connection : local
    # -> 비번 입력 -> DB 선택 -> finish











